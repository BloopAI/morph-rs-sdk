/*
 * MorphVM API
 *
 * REST API for managing MorphVM instances and snapshots.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InstanceNetworking {
    #[serde(rename = "internal_ip", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub internal_ip: Option<Option<String>>,
    #[serde(rename = "http_services", skip_serializing_if = "Option::is_none")]
    pub http_services: Option<Vec<models::InstanceHttpService>>,
}

impl InstanceNetworking {
    pub fn new() -> InstanceNetworking {
        InstanceNetworking {
            internal_ip: None,
            http_services: None,
        }
    }
}

