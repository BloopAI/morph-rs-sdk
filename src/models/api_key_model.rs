/*
 * MorphVM API
 *
 * REST API for managing MorphVM instances and snapshots.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiKeyModel {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "key_prefix")]
    pub key_prefix: String,
    #[serde(rename = "created")]
    pub created: i32,
    #[serde(rename = "last_used", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub last_used: Option<Option<i32>>,
}

impl ApiKeyModel {
    pub fn new(id: String, key_prefix: String, created: i32) -> ApiKeyModel {
        ApiKeyModel {
            id,
            key_prefix,
            created,
            last_used: None,
        }
    }
}

