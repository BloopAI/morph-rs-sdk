/*
 * MorphVM API
 *
 * REST API for managing MorphVM instances and snapshots.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserUsageOverviewModel {
    #[serde(rename = "instance")]
    pub instance: Vec<models::UserInstanceUsageModel>,
    #[serde(rename = "snapshot")]
    pub snapshot: Vec<models::UserSnapshotUsageModel>,
    #[serde(rename = "items")]
    pub items: Vec<String>,
}

impl UserUsageOverviewModel {
    pub fn new(instance: Vec<models::UserInstanceUsageModel>, snapshot: Vec<models::UserSnapshotUsageModel>, items: Vec<String>) -> UserUsageOverviewModel {
        UserUsageOverviewModel {
            instance,
            snapshot,
            items,
        }
    }
}

